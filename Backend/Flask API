from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt
from flask_jwt_extended import JWTManager, create_access_token
from datetime import datetime

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://localhost/booking_system'
app.config['JWT_SECRET_KEY'] = 'secretkey'

db = SQLAlchemy(app)
bcrypt = Bcrypt(app)
jwt = JWTManager(app)

# User model
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password = db.Column(db.String(120), nullable=False)

    def set_password(self, password):
        self.password = bcrypt.generate_password_hash(password).decode('utf-8')

# Appointment model
class Appointment(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    date = db.Column(db.DateTime, nullable=False)

# User registration route
@app.route('/register', methods=['POST'])
def register():
    data = request.get_json()
    username = data['username']
    password = data['password']
    
    user = User(username=username)
    user.set_password(password)
    db.session.add(user)
    db.session.commit()

    access_token = create_access_token(identity={'username': username})
    return jsonify(access_token=access_token), 201

# Booking appointment
@app.route('/book', methods=['POST'])
def book_appointment():
    data = request.get_json()
    appointment_date = datetime.strptime(data['date'], '%Y-%m-%d %H:%M:%S')

    new_appointment = Appointment(user_id=data['user_id'], date=appointment_date)
    db.session.add(new_appointment)
    db.session.commit()

    return jsonify(message="Appointment booked successfully"), 201

if __name__ == '__main__':
    app.run(debug=True)
